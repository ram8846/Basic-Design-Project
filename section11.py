# Section 11: System Reliability (Manual Data - First 100 Rows)

import pandas as pd
import matplotlib.pyplot as plt

# First 100 rows manually extracted from test_FD001.txt
data = [
    [1.0, 1.0, 518.67], [1.0, 2.0, 518.67], [1.0, 3.0, 518.67], [1.0, 4.0, 518.67], [1.0, 5.0, 518.67],
    [1.0, 6.0, 518.67], [1.0, 7.0, 518.67], [1.0, 8.0, 518.67], [1.0, 9.0, 518.67], [1.0, 10.0, 518.67],
    [1.0, 11.0, 518.67], [1.0, 12.0, 518.67], [1.0, 13.0, 518.67], [1.0, 14.0, 518.67], [1.0, 15.0, 518.67],
    [1.0, 16.0, 518.67], [1.0, 17.0, 518.67], [1.0, 18.0, 518.67], [1.0, 19.0, 518.67], [1.0, 20.0, 518.67],
    [1.0, 21.0, 518.67], [1.0, 22.0, 518.67], [1.0, 23.0, 518.67], [1.0, 24.0, 518.67], [1.0, 25.0, 518.67],
    [1.0, 26.0, 518.67], [1.0, 27.0, 518.67], [1.0, 28.0, 518.67], [1.0, 29.0, 518.67], [1.0, 30.0, 518.67],
    [1.0, 31.0, 518.67], [1.0, 32.0, 518.67], [1.0, 33.0, 518.67], [1.0, 34.0, 518.67], [1.0, 35.0, 518.67],
    [1.0, 36.0, 518.67], [1.0, 37.0, 518.67], [1.0, 38.0, 518.67], [1.0, 39.0, 518.67], [1.0, 40.0, 518.67],
    [1.0, 41.0, 518.67], [1.0, 42.0, 518.67], [1.0, 43.0, 518.67], [1.0, 44.0, 518.67], [1.0, 45.0, 518.67],
    [1.0, 46.0, 518.67], [1.0, 47.0, 518.67], [1.0, 48.0, 518.67], [1.0, 49.0, 518.67], [1.0, 50.0, 518.67],
    [1.0, 51.0, 518.67], [1.0, 52.0, 518.67], [1.0, 53.0, 518.67], [1.0, 54.0, 518.67], [1.0, 55.0, 518.67],
    [1.0, 56.0, 518.67], [1.0, 57.0, 518.67], [1.0, 58.0, 518.67], [1.0, 59.0, 518.67], [1.0, 60.0, 518.67],
    [1.0, 61.0, 518.67], [1.0, 62.0, 518.67], [1.0, 63.0, 518.67], [1.0, 64.0, 518.67], [1.0, 65.0, 518.67],
    [1.0, 66.0, 518.67], [1.0, 67.0, 518.67], [1.0, 68.0, 518.67], [1.0, 69.0, 518.67], [1.0, 70.0, 518.67],
    [1.0, 71.0, 518.67], [1.0, 72.0, 518.67], [1.0, 73.0, 518.67], [1.0, 74.0, 518.67], [1.0, 75.0, 518.67],
    [1.0, 76.0, 518.67], [1.0, 77.0, 518.67], [1.0, 78.0, 518.67], [1.0, 79.0, 518.67], [1.0, 80.0, 518.67],
    [1.0, 81.0, 518.67], [1.0, 82.0, 518.67], [1.0, 83.0, 518.67], [1.0, 84.0, 518.67], [1.0, 85.0, 518.67],
    [1.0, 86.0, 518.67], [1.0, 87.0, 518.67], [1.0, 88.0, 518.67], [1.0, 89.0, 518.67], [1.0, 90.0, 518.67],
    [1.0, 91.0, 518.67], [1.0, 92.0, 518.67], [1.0, 93.0, 518.67], [1.0, 94.0, 518.67], [1.0, 95.0, 518.67],
    [1.0, 96.0, 518.67], [1.0, 97.0, 518.67], [1.0, 98.0, 518.67], [1.0, 99.0, 518.67], [1.0, 100.0, 518.67]
]

# Convert to DataFrame
df = pd.DataFrame(data, columns=['engine_id', 'cycle', 'sensor1'])

# Simulated RUL (max cycle = 150 for this example)
df['max_cycle'] = 150
df['RUL'] = df['max_cycle'] - df['cycle']

# Empirical Reliability Function R(t)
max_cycle = int(df['cycle'].max())
total_engines = df['engine_id'].nunique()
reliability = []

for t in range(1, max_cycle + 1):
    surviving = df[df['cycle'] >= t]['engine_id'].nunique()
    R_t = surviving / total_engines
    reliability.append((t, R_t))

reliability_df = pd.DataFrame(reliability, columns=['Cycle', 'Reliability'])

# Plot Reliability Function
plt.figure(figsize=(10, 5))
plt.plot(reliability_df['Cycle'], reliability_df['Reliability'], marker='o')
plt.title('Empirical Reliability Function R(t) - First 100 Cycles')
plt.xlabel('Cycle (t)')
plt.ylabel('Reliability R(t)')
plt.grid(True)
plt.show()
